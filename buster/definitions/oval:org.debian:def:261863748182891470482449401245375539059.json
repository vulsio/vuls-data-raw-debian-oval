{
	"id": "oval:org.debian:def:261863748182891470482449401245375539059",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2023-52617 linux-5.10",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 10",
			"product": "linux-5.10"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2023-52617",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-52617"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  PCI: switchtec: Fix stdev_release() crash after surprise hot remove  A PCI device hot removal may occur while stdev->cdev is held open. The call to stdev_release() then happens during close or exit, at a point way past switchtec_pci_remove(). Otherwise the last ref would vanish with the trailing put_device(), just before return.  At that later point in time, the devm cleanup has already removed the stdev->mmio_mrpc mapping. Also, the stdev->pdev reference was not a counted one. Therefore, in DMA mode, the iowrite32() in stdev_release() will cause a fatal page fault, and the subsequent dma_free_coherent(), if reached, would pass a stale &stdev->pdev->dev pointer.  Fix by moving MRPC DMA shutdown into switchtec_pci_remove(), after stdev_kill(). Counting the stdev->pdev ref is now optional, but may prevent future accidents.  Reproducible via the script at https://lore.kernel.org/r/20231113212150.96410-1-dns@arista.com",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:27791",
								"comment": "linux-5.10 DPKG is earlier than 5.10.216-1~deb10u1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 10 is installed"
			}
		]
	}
}
