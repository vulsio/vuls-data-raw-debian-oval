{
	"id": "oval:org.debian:def:157330683332002201647531831576997511525",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-46988 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 10",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-46988",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-46988"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  userfaultfd: release page in error path to avoid BUG_ON  Consider the following sequence of events:  1. Userspace issues a UFFD ioctl, which ends up calling into    shmem_mfill_atomic_pte(). We successfully account the blocks, we    shmem_alloc_page(), but then the copy_from_user() fails. We return    -ENOENT. We don't release the page we allocated. 2. Our caller detects this error code, tries the copy_from_user() after    dropping the mmap_lock, and retries, calling back into    shmem_mfill_atomic_pte(). 3. Meanwhile, let's say another process filled up the tmpfs being used. 4. So shmem_mfill_atomic_pte() fails to account blocks this time, and    immediately returns - without releasing the page.  This triggers a BUG_ON in our caller, which asserts that the page should always be consumed, unless -ENOENT is returned.  To fix this, detect if we have such a \"dangling\" page when accounting fails, and if so, release it before returning.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:22850",
								"comment": "linux DPKG is earlier than 4.19.194-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 10 is installed"
			}
		]
	}
}
