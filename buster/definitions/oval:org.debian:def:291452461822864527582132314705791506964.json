{
	"id": "oval:org.debian:def:291452461822864527582132314705791506964",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-27043 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 10",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-27043",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27043"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  media: edia: dvbdev: fix a use-after-free  In dvb_register_device, *pdvbdev is set equal to dvbdev, which is freed in several error-handling paths. However, *pdvbdev is not set to NULL after dvbdev's deallocation, causing use-after-frees in many places, for example, in the following call chain:  budget_register   |-> dvb_dmxdev_init         |-> dvb_register_device   |-> dvb_dmxdev_release         |-> dvb_unregister_device               |-> dvb_remove_device                     |-> dvb_device_put                           |-> kref_put  When calling dvb_unregister_device, dmxdev->dvbdev (i.e. *pdvbdev in dvb_register_device) could point to memory that had been freed in dvb_register_device. Thereafter, this pointer is transferred to kref_put and triggering a use-after-free.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:28487",
								"comment": "linux DPKG is earlier than 0"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 10 is installed"
			}
		]
	}
}
