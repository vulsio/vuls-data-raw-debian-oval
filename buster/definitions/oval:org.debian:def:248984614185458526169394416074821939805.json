{
	"id": "oval:org.debian:def:248984614185458526169394416074821939805",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-47249 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 10",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-47249",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47249"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  net: rds: fix memory leak in rds_recvmsg  Syzbot reported memory leak in rds. The problem was in unputted refcount in case of error.  int rds_recvmsg(struct socket *sock, struct msghdr *msg, size_t size, \t\tint msg_flags) { ...  \tif (!rds_next_incoming(rs, &inc)) { \t\t... \t}  After this \"if\" inc refcount incremented and  \tif (rds_cmsg_recv(inc, msg, rs)) { \t\tret = -EFAULT; \t\tgoto out; \t} ... out: \treturn ret; }  in case of rds_cmsg_recv() fail the refcount won't be decremented. And it's easy to see from ftrace log, that rds_inc_addref() don't have rds_inc_put() pair in rds_recvmsg() after rds_cmsg_recv()   1)               |  rds_recvmsg() {  1)   3.721 us    |    rds_inc_addref();  1)   3.853 us    |    rds_message_inc_copy_to_user();  1) + 10.395 us   |    rds_cmsg_recv();  1) + 34.260 us   |  }",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:22979",
								"comment": "linux DPKG is earlier than 4.19.208-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 10 is installed"
			}
		]
	}
}
