{
	"id": "oval:org.debian:def:339971895665513673031228710359259009208",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2022-35948 node-undici",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "node-undici"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2022-35948",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-35948"
			}
		],
		"description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:24318",
								"comment": "node-undici DPKG is earlier than 5.8.2+dfsg1+~cs18.9.18.1-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
