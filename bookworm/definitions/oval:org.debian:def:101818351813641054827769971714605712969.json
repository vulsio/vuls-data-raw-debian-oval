{
	"id": "oval:org.debian:def:101818351813641054827769971714605712969",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-47377 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-47377",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47377"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  xen/balloon: use a kernel thread instead a workqueue  Today the Xen ballooning is done via delayed work in a workqueue. This might result in workqueue hangups being reported in case of large amounts of memory are being ballooned in one go (here 16GB):  BUG: workqueue lockup - pool cpus=6 node=0 flags=0x0 nice=0 stuck for 64s! Showing busy workqueues and worker pools: workqueue events: flags=0x0   pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=2/256 refcnt=3     in-flight: 229:balloon_process     pending: cache_reap workqueue events_freezable_power_: flags=0x84   pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1/256 refcnt=2     pending: disk_events_workfn workqueue mm_percpu_wq: flags=0x8   pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1/256 refcnt=2     pending: vmstat_update pool 12: cpus=6 node=0 flags=0x0 nice=0 hung=64s workers=3 idle: 2222 43  This can easily be avoided by using a dedicated kernel thread for doing the ballooning work.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:22690",
								"comment": "linux DPKG is earlier than 5.14.9-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
