{
	"id": "oval:org.debian:def:20246761514841594746232686424833355613",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2023-52860 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2023-52860",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-52860"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  drivers/perf: hisi: use cpuhp_state_remove_instance_nocalls() for hisi_hns3_pmu uninit process  When tearing down a 'hisi_hns3' PMU, we mistakenly run the CPU hotplug callbacks after the device has been unregistered, leading to fireworks when we try to execute empty function callbacks within the driver:    | Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000   | CPU: 0 PID: 15 Comm: cpuhp/0 Tainted: G        W  O      5.12.0-rc4+ #1   | Hardware name:  , BIOS KpxxxFPGA 1P B600 V143 04/22/2021   | pstate: 80400009 (Nzcv daif +PAN -UAO -TCO BTYPE=--)   | pc : perf_pmu_migrate_context+0x98/0x38c   | lr : perf_pmu_migrate_context+0x94/0x38c   |   | Call trace:   |  perf_pmu_migrate_context+0x98/0x38c   |  hisi_hns3_pmu_offline_cpu+0x104/0x12c [hisi_hns3_pmu]  Use cpuhp_state_remove_instance_nocalls() instead of cpuhp_state_remove_instance() so that the notifiers don't execute after the PMU device has been unregistered.  [will: Rewrote commit message]",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:28419",
								"comment": "linux DPKG is earlier than 6.1.64-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
