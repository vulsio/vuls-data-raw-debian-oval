{
	"id": "oval:org.debian:def:316577740016630251577441772634783942438",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2022-48806 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2022-48806",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-48806"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  eeprom: ee1004: limit i2c reads to I2C_SMBUS_BLOCK_MAX  Commit effa453168a7 (\"i2c: i801: Don't silently correct invalid transfer size\") revealed that ee1004_eeprom_read() did not properly limit how many bytes to read at once.  In particular, i2c_smbus_read_i2c_block_data_or_emulated() takes the length to read as an u8.  If count == 256 after taking into account the offset and page boundary, the cast to u8 overflows.  And this is common when user space tries to read the entire EEPROM at once.  To fix it, limit each read to I2C_SMBUS_BLOCK_MAX (32) bytes, already the maximum length i2c_smbus_read_i2c_block_data_or_emulated() allows.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:25781",
								"comment": "linux DPKG is earlier than 5.16.10-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
