{
	"id": "oval:org.debian:def:9444410291225622571165662599991022700",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-47416 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-47416",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47416"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  phy: mdio: fix memory leak  Syzbot reported memory leak in MDIO bus interface, the problem was in wrong state logic.  MDIOBUS_ALLOCATED indicates 2 states: \t1. Bus is only allocated \t2. Bus allocated and __mdiobus_register() fails, but \t   device_register() was called  In case of device_register() has been called we should call put_device() to correctly free the memory allocated for this device, but mdiobus_free() calls just kfree(dev) in case of MDIOBUS_ALLOCATED state  To avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED _before_ calling device_register(), because put_device() should be called even in case of device_register() failure.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:22735",
								"comment": "linux DPKG is earlier than 5.14.12-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
