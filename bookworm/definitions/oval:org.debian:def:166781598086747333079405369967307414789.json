{
	"id": "oval:org.debian:def:166781598086747333079405369967307414789",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-38610 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-38610",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-38610"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  drivers/virt/acrn: fix PFNMAP PTE checks in acrn_vm_ram_map()  Patch series \"mm: follow_pte() improvements and acrn follow_pte() fixes\".  Patch #1 fixes a bunch of issues I spotted in the acrn driver.  It compiles, that's all I know.  I'll appreciate some review and testing from acrn folks.  Patch #2+#3 improve follow_pte(), passing a VMA instead of the MM, adding more sanity checks, and improving the documentation.  Gave it a quick test on x86-64 using VM_PAT that ends up using follow_pte().   This patch (of 3):  We currently miss handling various cases, resulting in a dangerous follow_pte() (previously follow_pfn()) usage.  (1) We're not checking PTE write permissions.  Maybe we should simply always require pte_write() like we do for pin_user_pages_fast(FOLL_WRITE)? Hard to tell, so let's check for ACRN_MEM_ACCESS_WRITE for now.  (2) We're not rejecting refcounted pages.  As we are not using MMU notifiers, messing with refcounted pages is dangerous and can result in use-after-free. Let's make sure to reject them.  (3) We are only looking at the first PTE of a bigger range.  We only lookup a single PTE, but memmap->len may span a larger area. Let's loop over all involved PTEs and make sure the PFN range is actually contiguous. Reject everything else: it couldn't have worked either way, and rather made use access PFNs we shouldn't be accessing.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:30295",
								"comment": "linux DPKG is earlier than 6.1.94-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
