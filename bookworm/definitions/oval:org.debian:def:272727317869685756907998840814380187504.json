{
	"id": "oval:org.debian:def:272727317869685756907998840814380187504",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2022-48941 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2022-48941",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-48941"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  ice: fix concurrent reset and removal of VFs  Commit c503e63200c6 (\"ice: Stop processing VF messages during teardown\") introduced a driver state flag, ICE_VF_DEINIT_IN_PROGRESS, which is intended to prevent some issues with concurrently handling messages from VFs while tearing down the VFs.  This change was motivated by crashes caused while tearing down and bringing up VFs in rapid succession.  It turns out that the fix actually introduces issues with the VF driver caused because the PF no longer responds to any messages sent by the VF during its .remove routine. This results in the VF potentially removing its DMA memory before the PF has shut down the device queues.  Additionally, the fix doesn't actually resolve concurrency issues within the ice driver. It is possible for a VF to initiate a reset just prior to the ice driver removing VFs. This can result in the remove task concurrently operating while the VF is being reset. This results in similar memory corruption and panics purportedly fixed by that commit.  Fix this concurrency at its root by protecting both the reset and removal flows using the existing VF cfg_lock. This ensures that we cannot remove the VF while any outstanding critical tasks such as a virtchnl message or a reset are occurring.  This locking change also fixes the root cause originally fixed by commit c503e63200c6 (\"ice: Stop processing VF messages during teardown\"), so we can simply revert it.  Note that I kept these two changes together because simply reverting the original commit alone would leave the driver vulnerable to worse race conditions.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:25916",
								"comment": "linux DPKG is earlier than 5.16.12-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
