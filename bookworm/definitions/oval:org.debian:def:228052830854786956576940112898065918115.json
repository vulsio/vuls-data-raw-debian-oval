{
	"id": "oval:org.debian:def:228052830854786956576940112898065918115",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-46975 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-46975",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-46975"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  netfilter: conntrack: Make global sysctls readonly in non-init netns  These sysctls point to global variables: - NF_SYSCTL_CT_MAX (&nf_conntrack_max) - NF_SYSCTL_CT_EXPECT_MAX (&nf_ct_expect_max) - NF_SYSCTL_CT_BUCKETS (&nf_conntrack_htable_size_user)  Because their data pointers are not updated to point to per-netns structures, they must be marked read-only in a non-init_net ns. Otherwise, changes in any net namespace are reflected in (leaked into) all other net namespaces. This problem has existed since the introduction of net namespaces.  The current logic marks them read-only only if the net namespace is owned by an unprivileged user (other than init_user_ns).  Commit d0febd81ae77 (\"netfilter: conntrack: re-visit sysctls in unprivileged namespaces\") \"exposes all sysctls even if the namespace is unpriviliged.\" Since we need to mark them readonly in any case, we can forego the unprivileged user check altogether.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:22322",
								"comment": "linux DPKG is earlier than 5.10.38-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
