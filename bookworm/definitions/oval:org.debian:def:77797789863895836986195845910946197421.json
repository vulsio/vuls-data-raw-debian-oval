{
	"id": "oval:org.debian:def:77797789863895836986195845910946197421",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-47140 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-47140",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47140"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  iommu/amd: Clear DMA ops when switching domain  Since commit 08a27c1c3ecf (\"iommu: Add support to change default domain of an iommu group\") a user can switch a device between IOMMU and direct DMA through sysfs. This doesn't work for AMD IOMMU at the moment because dev->dma_ops is not cleared when switching from a DMA to an identity IOMMU domain. The DMA layer thus attempts to use the dma-iommu ops on an identity domain, causing an oops:    # echo 0000:00:05.0 > /sys/sys/bus/pci/drivers/e1000e/unbind   # echo identity > /sys/bus/pci/devices/0000:00:05.0/iommu_group/type   # echo 0000:00:05.0 > /sys/sys/bus/pci/drivers/e1000e/bind    ...   BUG: kernel NULL pointer dereference, address: 0000000000000028    ...    Call Trace:     iommu_dma_alloc     e1000e_setup_tx_resources     e1000e_open  Since iommu_change_dev_def_domain() calls probe_finalize() again, clear the dma_ops there like Vt-d does.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:22460",
								"comment": "linux DPKG is earlier than 5.14.6-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
