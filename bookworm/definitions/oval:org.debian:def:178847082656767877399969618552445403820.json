{
	"id": "oval:org.debian:def:178847082656767877399969618552445403820",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2022-49016 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2022-49016",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-49016"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  net: mdiobus: fix unbalanced node reference count  I got the following report while doing device(mscc-miim) load test with CONFIG_OF_UNITTEST and CONFIG_OF_DYNAMIC enabled:    OF: ERROR: memory leak, expected refcount 1 instead of 2,   of_node_get()/of_node_put() unbalanced - destroy cset entry:   attach overlay node /spi/soc@0/mdio@7107009c/ethernet-phy@0  If the 'fwnode' is not an acpi node, the refcount is get in fwnode_mdiobus_phy_device_register(), but it has never been put when the device is freed in the normal path. So call fwnode_handle_put() in phy_device_release() to avoid leak.  If it's an acpi node, it has never been get, but it's put in the error path, so call fwnode_handle_get() before phy_device_register() to keep get/put operation balanced.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:25986",
								"comment": "linux DPKG is earlier than 6.0.12-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
