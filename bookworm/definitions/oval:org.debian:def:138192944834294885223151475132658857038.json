{
	"id": "oval:org.debian:def:138192944834294885223151475132658857038",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2023-52629 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2023-52629",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-52629"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  sh: push-switch: Reorder cleanup operations to avoid use-after-free bug  The original code puts flush_work() before timer_shutdown_sync() in switch_drv_remove(). Although we use flush_work() to stop the worker, it could be rescheduled in switch_timer(). As a result, a use-after-free bug can occur. The details are shown below:        (cpu 0)                    |      (cpu 1) switch_drv_remove()              |  flush_work()                    |   ...                            |  switch_timer // timer                                  |   schedule_work(&psw->work)  timer_shutdown_sync()           |  ...                             |  switch_work_handler // worker  kfree(psw) // free              |                                  |   psw->state = 0 // use  This patch puts timer_shutdown_sync() before flush_work() to mitigate the bugs. As a result, the worker and timer will be stopped safely before the deallocate operations.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:27723",
								"comment": "linux DPKG is earlier than 0"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
