{
	"id": "oval:org.debian:def:151153486111695683911156226344812842358",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-42131 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-42131",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-42131"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  mm: avoid overflows in dirty throttling logic  The dirty throttling logic is interspersed with assumptions that dirty limits in PAGE_SIZE units fit into 32-bit (so that various multiplications fit into 64-bits).  If limits end up being larger, we will hit overflows, possible divisions by 0 etc.  Fix these problems by never allowing so large dirty limits as they have dubious practical value anyway.  For dirty_bytes / dirty_background_bytes interfaces we can just refuse to set so large limits.  For dirty_ratio / dirty_background_ratio it isn't so simple as the dirty limit is computed from the amount of available memory which can change due to memory hotplug etc.  So when converting dirty limits from ratios to numbers of pages, we just don't allow the result to exceed UINT_MAX.  This is root-only triggerable problem which occurs when the operator sets dirty limits to >16 TB.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:31066",
								"comment": "linux DPKG is earlier than 6.1.98-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
