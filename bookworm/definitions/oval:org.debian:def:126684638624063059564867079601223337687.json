{
	"id": "oval:org.debian:def:126684638624063059564867079601223337687",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-46896 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-46896",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-46896"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  drm/amdgpu: don't access invalid sched  Since 2320c9e6a768 (\"drm/sched: memset() 'job' in drm_sched_job_init()\") accessing job->base.sched can produce unexpected results as the initialisation of (*job)->base.sched done in amdgpu_job_alloc is overwritten by the memset.  This commit fixes an issue when a CS would fail validation and would be rejected after job->num_ibs is incremented. In this case, amdgpu_ib_free(ring->adev, ...) will be called, which would crash the machine because the ring value is bogus.  To fix this, pass a NULL pointer to amdgpu_ib_free(): we can do this because the device is actually not used in this function.  The next commit will remove the ring argument completely.  (cherry picked from commit 2ae520cb12831d264ceb97c61f72c59d33c0dbd7)",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:31558",
								"comment": "linux DPKG is earlier than 6.1.123-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
