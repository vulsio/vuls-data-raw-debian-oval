{
	"id": "oval:org.debian:def:295803519831117699768786115419322608659",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-38633 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-38633",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-38633"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  serial: max3100: Update uart_driver_registered on driver removal  The removal of the last MAX3100 device triggers the removal of the driver. However, code doesn't update the respective global variable and after insmod — rmmod — insmod cycle the kernel oopses:    max3100 spi-PRP0001:01: max3100_probe: adding port 0   BUG: kernel NULL pointer dereference, address: 0000000000000408   ...   RIP: 0010:serial_core_register_port+0xa0/0x840   ...    max3100_probe+0x1b6/0x280 [max3100]    spi_probe+0x8d/0xb0  Update the actual state so next time UART driver will be registered again.  Hugo also noticed, that the error path in the probe also affected by having the variable set, and not cleared. Instead of clearing it move the assignment after the successfull uart_register_driver() call.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:30701",
								"comment": "linux DPKG is earlier than 6.1.94-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
