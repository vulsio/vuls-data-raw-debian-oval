{
	"id": "oval:org.debian:def:228148512737887401785073064946794851232",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-36016 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 12",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-36016",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36016"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  tty: n_gsm: fix possible out-of-bounds in gsm0_receive()  Assuming the following: - side A configures the n_gsm in basic option mode - side B sends the header of a basic option mode frame with data length 1 - side A switches to advanced option mode - side B sends 2 data bytes which exceeds gsm->len   Reason: gsm->len is not used in advanced option mode. - side A switches to basic option mode - side B keeps sending until gsm0_receive() writes past gsm->buf   Reason: Neither gsm->state nor gsm->len have been reset after   reconfiguration.  Fix this by changing gsm->count to gsm->len comparison from equal to less than. Also add upper limit checks against the constant MAX_MRU in gsm0_receive() and gsm1_receive() to harden against memory corruption of gsm->len and gsm->mru.  All other checks remain as we still need to limit the data according to the user configuration and actual payload size.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:30231",
								"comment": "linux DPKG is earlier than 6.1.94-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 12 is installed"
			}
		]
	}
}
