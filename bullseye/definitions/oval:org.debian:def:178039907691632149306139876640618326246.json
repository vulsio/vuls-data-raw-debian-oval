{
	"id": "oval:org.debian:def:178039907691632149306139876640618326246",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-26981 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-26981",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26981"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  nilfs2: fix OOB in nilfs_set_de_type  The size of the nilfs_type_by_mode array in the fs/nilfs2/dir.c file is defined as \"S_IFMT >> S_SHIFT\", but the nilfs_set_de_type() function, which uses this array, specifies the index to read from the array in the same way as \"(mode & S_IFMT) >> S_SHIFT\".  static void nilfs_set_de_type(struct nilfs_dir_entry *de, struct inode  *inode) { \tumode_t mode = inode->i_mode;  \tde->file_type = nilfs_type_by_mode[(mode & S_IFMT)>>S_SHIFT]; // oob }  However, when the index is determined this way, an out-of-bounds (OOB) error occurs by referring to an index that is 1 larger than the array size when the condition \"mode & S_IFMT == S_IFMT\" is satisfied.  Therefore, a patch to resize the nilfs_type_by_mode array should be applied to prevent OOB errors.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:29365",
								"comment": "linux DPKG is earlier than 0"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
