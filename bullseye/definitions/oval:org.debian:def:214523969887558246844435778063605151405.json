{
	"id": "oval:org.debian:def:214523969887558246844435778063605151405",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-26720 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-26720",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26720"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again  (struct dirty_throttle_control *)->thresh is an unsigned long, but is passed as the u32 divisor argument to div_u64().  On architectures where unsigned long is 64 bytes, the argument will be implicitly truncated.  Use div64_u64() instead of div_u64() so that the value used in the \"is this a safe division\" check is the same as the divisor.  Also, remove redundant cast of the numerator to u64, as that should happen implicitly.  This would be difficult to exploit in memcg domain, given the ratio-based arithmetic domain_drity_limits() uses, but is much easier in global writeback domain with a BDI_CAP_STRICTLIMIT-backing device, using e.g.  vm.dirty_bytes=(1<<32)*PAGE_SIZE so that dtc->thresh == (1<<32)",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:29051",
								"comment": "linux DPKG is earlier than 0"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
