{
	"id": "oval:org.debian:def:305247521257460468034841984909836875654",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-36244 linux-6.1",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux-6.1"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-36244",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36244"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  net/sched: taprio: extend minimum interval restriction to entire cycle too  It is possible for syzbot to side-step the restriction imposed by the blamed commit in the Fixes: tag, because the taprio UAPI permits a cycle-time different from (and potentially shorter than) the sum of entry intervals.  We need one more restriction, which is that the cycle time itself must be larger than N * ETH_ZLEN bit times, where N is the number of schedule entries. This restriction needs to apply regardless of whether the cycle time came from the user or was the implicit, auto-calculated value, so we move the existing \"cycle == 0\" check outside the \"if \"(!new->cycle_time)\" branch. This way covers both conditions and scenarios.  Add a selftest which illustrates the issue triggered by syzbot.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:30745",
								"comment": "linux-6.1 DPKG is earlier than 6.1.119-1~deb11u1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
