{
	"id": "oval:org.debian:def:269027745299562293081094180270150082613",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-50156 linux-6.1",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux-6.1"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-50156",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-50156"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  drm/msm: Avoid NULL dereference in msm_disp_state_print_regs()  If the allocation in msm_disp_state_dump_regs() failed then `block->state` can be NULL. The msm_disp_state_print_regs() function _does_ have code to try to handle it with:    if (*reg)     dump_addr = *reg;  ...but since \"dump_addr\" is initialized to NULL the above is actually a noop. The code then goes on to dereference `dump_addr`.  Make the function print \"Registers not stored\" when it sees a NULL to solve this. Since we're touching the code, fix msm_disp_state_print_regs() not to pointlessly take a double-pointer and properly mark the pointer as `const`.  Patchwork: https://patchwork.freedesktop.org/patch/619657/",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:32661",
								"comment": "linux-6.1 DPKG is earlier than 6.1.119-1~deb11u1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
