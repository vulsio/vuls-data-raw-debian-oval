{
	"id": "oval:org.debian:def:277524065027440515108267961091608370237",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-42246 linux-6.1",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux-6.1"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-42246",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-42246"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  net, sunrpc: Remap EPERM in case of connection failure in xs_tcp_setup_socket  When using a BPF program on kernel_connect(), the call can return -EPERM. This causes xs_tcp_setup_socket() to loop forever, filling up the syslog and causing the kernel to potentially freeze up.  Neil suggested:    This will propagate -EPERM up into other layers which might not be ready   to handle it. It might be safer to map EPERM to an error we would be more   likely to expect from the network system - such as ECONNREFUSED or ENETDOWN.  ECONNREFUSED as error seems reasonable. For programs setting a different error can be out of reach (see handling in 4fbac77d2d09) in particular on kernels which do not have f10d05966196 (\"bpf: Make BPF_PROG_RUN_ARRAY return -err instead of allow boolean\"), thus given that it is better to simply remap for consistent behavior. UDP does handle EPERM in xs_udp_send_request().",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:31463",
								"comment": "linux-6.1 DPKG is earlier than 6.1.119-1~deb11u1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
