{
	"id": "oval:org.debian:def:333050742890254659335335077570123031221",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-41005 linux-6.1",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux-6.1"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-41005",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-41005"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  netpoll: Fix race condition in netpoll_owner_active  KCSAN detected a race condition in netpoll:  \tBUG: KCSAN: data-race in net_rx_action / netpoll_send_skb \twrite (marked) to 0xffff8881164168b0 of 4 bytes by interrupt on cpu 10: \tnet_rx_action (./include/linux/netpoll.h:90 net/core/dev.c:6712 net/core/dev.c:6822) <snip> \tread to 0xffff8881164168b0 of 4 bytes by task 1 on cpu 2: \tnetpoll_send_skb (net/core/netpoll.c:319 net/core/netpoll.c:345 net/core/netpoll.c:393) \tnetpoll_send_udp (net/core/netpoll.c:?) <snip> \tvalue changed: 0x0000000a -> 0xffffffff  This happens because netpoll_owner_active() needs to check if the current CPU is the owner of the lock, touching napi->poll_owner non atomically. The ->poll_owner field contains the current CPU holding the lock.  Use an atomic read to check if the poll owner is the current CPU.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:31172",
								"comment": "linux-6.1 DPKG is earlier than 6.1.119-1~deb11u1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
