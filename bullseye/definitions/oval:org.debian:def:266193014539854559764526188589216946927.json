{
	"id": "oval:org.debian:def:266193014539854559764526188589216946927",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-46971 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-46971",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-46971"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  perf/core: Fix unconditional security_locked_down() call  Currently, the lockdown state is queried unconditionally, even though its result is used only if the PERF_SAMPLE_REGS_INTR bit is set in attr.sample_type. While that doesn't matter in case of the Lockdown LSM, it causes trouble with the SELinux's lockdown hook implementation.  SELinux implements the locked_down hook with a check whether the current task's type has the corresponding \"lockdown\" class permission (\"integrity\" or \"confidentiality\") allowed in the policy. This means that calling the hook when the access control decision would be ignored generates a bogus permission check and audit record.  Fix this by checking sample_type first and only calling the hook when its result would be honored.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:23314",
								"comment": "linux DPKG is earlier than 5.10.38-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
