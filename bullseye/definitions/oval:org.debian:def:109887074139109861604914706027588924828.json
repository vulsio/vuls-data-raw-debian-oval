{
	"id": "oval:org.debian:def:109887074139109861604914706027588924828",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-47368 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-47368",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47368"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  enetc: Fix illegal access when reading affinity_hint  irq_set_affinity_hit() stores a reference to the cpumask_t parameter in the irq descriptor, and that reference can be accessed later from irq_affinity_hint_proc_show(). Since the cpu_mask parameter passed to irq_set_affinity_hit() has only temporary storage (it's on the stack memory), later accesses to it are illegal. Thus reads from the corresponding procfs affinity_hint file can result in paging request oops.  The issue is fixed by the get_cpu_mask() helper, which provides a permanent storage for the cpumask_t parameter.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:23548",
								"comment": "linux DPKG is earlier than 5.10.70-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
