{
	"id": "oval:org.debian:def:86041836339462672917691824185489286751",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-47095 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-47095",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47095"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  ipmi: ssif: initialize ssif_info->client early  During probe ssif_info->client is dereferenced in error path. However, it is set when some of the error checking has already been done. This causes following kernel crash if an error path is taken:  [   30.645593][  T674] ipmi_ssif 0-000e: ipmi_ssif: Not probing, Interface already present [   30.657616][  T674] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000088 ... [   30.657723][  T674] pc : __dev_printk+0x28/0xa0 [   30.657732][  T674] lr : _dev_err+0x7c/0xa0 ... [   30.657772][  T674] Call trace: [   30.657775][  T674]  __dev_printk+0x28/0xa0 [   30.657778][  T674]  _dev_err+0x7c/0xa0 [   30.657781][  T674]  ssif_probe+0x548/0x900 [ipmi_ssif 62ce4b08badc1458fd896206d9ef69a3c31f3d3e] [   30.657791][  T674]  i2c_device_probe+0x37c/0x3c0 ...  Initialize ssif_info->client before any error path can be taken. Clear i2c_client data in the error path to prevent the dangling pointer from leaking.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:23410",
								"comment": "linux DPKG is earlier than 5.10.92-1"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
