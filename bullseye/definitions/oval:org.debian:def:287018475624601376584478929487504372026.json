{
	"id": "oval:org.debian:def:287018475624601376584478929487504372026",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-42315 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-42315",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-42315"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  exfat: fix potential deadlock on __exfat_get_dentry_set  When accessing a file with more entries than ES_MAX_ENTRY_NUM, the bh-array is allocated in __exfat_get_entry_set. The problem is that the bh-array is allocated with GFP_KERNEL. It does not make sense. In the following cases, a deadlock for sbi->s_lock between the two processes may occur.         CPU0                CPU1        ----                ----   kswapd    balance_pgdat     lock(fs_reclaim)                       exfat_iterate                        lock(&sbi->s_lock)                        exfat_readdir                         exfat_get_uniname_from_ext_entry                          exfat_get_dentry_set                           __exfat_get_dentry_set                            kmalloc_array                             ...                             lock(fs_reclaim)     ...     evict      exfat_evict_inode       lock(&sbi->s_lock)  To fix this, let's allocate bh-array with GFP_NOFS.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:31550",
								"comment": "linux DPKG is earlier than 0"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
