{
	"id": "oval:org.debian:def:89825219043832981462325818121121065709",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-47412 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2021-47412",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47412"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  block: don't call rq_qos_ops->done_bio if the bio isn't tracked  rq_qos framework is only applied on request based driver, so:  1) rq_qos_done_bio() needn't to be called for bio based driver  2) rq_qos_done_bio() needn't to be called for bio which isn't tracked, such as bios ended from error handling code.  Especially in bio_endio():  1) request queue is referred via bio->bi_bdev->bd_disk->queue, which may be gone since request queue refcount may not be held in above two cases  2) q->rq_qos may be freed in blk_cleanup_queue() when calling into __rq_qos_done_bio()  Fix the potential kernel panic by not calling rq_qos_ops->done_bio if the bio isn't tracked. This way is safe because both ioc_rqos_done_bio() and blkcg_iolatency_done_bio() are nop if the bio isn't tracked.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:23582",
								"comment": "linux DPKG is earlier than 0"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
