{
	"id": "oval:org.debian:def:326846458627952613224463516786206526940",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-57898 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-57898",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-57898"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  wifi: cfg80211: clear link ID from bitmap during link delete after clean up  Currently, during link deletion, the link ID is first removed from the valid_links bitmap before performing any clean-up operations. However, some functions require the link ID to remain in the valid_links bitmap. One such example is cfg80211_cac_event(). The flow is -  nl80211_remove_link()     cfg80211_remove_link()         ieee80211_del_intf_link()             ieee80211_vif_set_links()                 ieee80211_vif_update_links()                     ieee80211_link_stop()                         cfg80211_cac_event()  cfg80211_cac_event() requires link ID to be present but it is cleared already in cfg80211_remove_link(). Ultimately, WARN_ON() is hit.  Therefore, clear the link ID from the bitmap only after completing the link clean-up.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:33290",
								"comment": "linux DPKG is earlier than 0"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
