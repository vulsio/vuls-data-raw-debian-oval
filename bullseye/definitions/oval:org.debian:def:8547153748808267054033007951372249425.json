{
	"id": "oval:org.debian:def:8547153748808267054033007951372249425",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-26752 linux",
		"affected": {
			"family": "unix",
			"platform": "Debian GNU/Linux 11",
			"product": "linux"
		},
		"reference": [
			{
				"source": "CVE",
				"ref_id": "CVE-2024-26752",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26752"
			}
		],
		"description": "In the Linux kernel, the following vulnerability has been resolved:  l2tp: pass correct message length to ip6_append_data  l2tp_ip6_sendmsg needs to avoid accounting for the transport header twice when splicing more data into an already partially-occupied skbuff.  To manage this, we check whether the skbuff contains data using skb_queue_empty when deciding how much data to append using ip6_append_data.  However, the code which performed the calculation was incorrect:       ulen = len + skb_queue_empty(&sk->sk_write_queue) ? transhdrlen : 0;  ...due to C operator precedence, this ends up setting ulen to transhdrlen for messages with a non-zero length, which results in corrupted packets on the wire.  Add parentheses to correct the calculation in line with the original intent.",
		"debian": {}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterias": [
					{
						"operator": "AND",
						"criterions": [
							{
								"test_ref": "oval:org.debian.oval:tst:2",
								"comment": "all architecture"
							},
							{
								"test_ref": "oval:org.debian.oval:tst:29110",
								"comment": "linux DPKG is earlier than 0"
							}
						]
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.debian.oval:tst:1",
				"comment": "Debian 11 is installed"
			}
		]
	}
}
